* 관심사의 분리 : 컴포넌트 각각의 데이터를 조작하는 것들을 분리하는 것

* 중앙관리식 설계 : 한 컴포넌트에서 데이터를 전부 가지고 있고, 나머지 컴포넌트에서는 데이터에 접근해서 데이터의 수정 요청을 한다.

 


★ 2차 리팩토링(UX 개선)



＃문제점
인풋 창에서 입력 값 없이 추가를 했을 때 예외 처리가 필요하다.


＃해결방법
입력 값이 없을 때 모달창을 띄워서 사용자에게 알려준다.





* Vue가 React와 비교했을 때 장점 : 트랜지션, 애니메이션 효과를 라이브러리 단에서 제공해 주고 있다.

* x-template : 템플릿을 정의하는 또 다른 방법으로 text/x-template 타입의 스크립트 엘리먼트 내부에 ID로 템플릿을 참조한다. 

* slot : 특정 컴포넌트의 UI들을 재정의 할 수 있는 기능

* Vue 트랜지션&애니메이션 관련 공식 문서 : https://kr.vuejs.org/v2/guide/transitions.html









